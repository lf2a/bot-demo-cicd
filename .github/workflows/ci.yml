name: CI

on:
  push:
  pull_request:

env:
  BOTCITY_SERVER: ${{ secrets.BOTCITY_SERVER }}
  BOTCITY_KEY: ${{ secrets.BOTCITY_KEY }}
  BOTCITY_LOGIN: ${{ secrets.BOTCITY_LOGIN }}
  BOTCITY_ORGANIZATION: ${{ secrets.BOTCITY_ORGANIZATION }}
  BRANCH_NAME: ${github.ref#refs/*/}
  BOT_VERSION: $(cat VERSION)
  BOT_ACTIVITY: ${{ secrets.BOT_ACTIVITY }}
  MACHINE_ID: ${{ secrets.MACHINE_ID }}


jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Set up Java 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Install Test Dependencies
        run: pip install -r requirements-tests.txt

      - name: Set up Firefox Ubuntu
        uses: browser-actions/setup-firefox@latest

      - name: Changing Ubuntu gecko-driver permissions
        run: sudo chmod 755 botDemoCiCd/resources/geckodriver

      - name: Run tests
        run: pytest --headless botDemoCiCd

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Building the package
        run: python setup.py sdist

      - name: Downloading BotCLI
        run: curl https://developers.botcity.dev/download/CLI_1.6.zip --output cli.zip

      - name: Unzip file
        run: |
          sudo apt install unzip
          unzip cli.zip
          mv 1.6/* ./
          ls -lha

      - name: Echo variables in config file.
        run: |
          cat << EOT > config.properties
             organization=${{ env.BOTCITY_ORGANIZATION }}
             workspace=${{ env.BOTCITY_ORGANIZATION }}
             server=${{ env.BOTCITY_SERVER }}
             login=${{ env.BOTCITY_LOGIN }}
             key=${{ env.BOTCITY_KEY }}
          EOT

      - name: Update bot
        if: ${{ env.RELEASE_VERSION }} == "cicd-github" # trocar para "main"
        run: |
          java -jar botCLI.jar bot deploy -version ${{ env.BOT_VERSION }}+${GITHUB_SHA::8} -botId "botDemoCiCd" -file dist/botDemoCiCd-1.0.tar.gz -python
          java -jar botCLI.jar bot release -botId "botDemoCiCd" -version ${{ env.BOT_VERSION }}+${GITHUB_SHA::8}

      - name: Run task
        if: ${{ env.RELEASE_VERSION }} == "cicd-github" # trocar para "main"
        run: java -jar botCLI.jar task create -activityLabel ${{ env.BOT_ACTIVITY }} -test

      - name: Downloading BotCLI
        run: curl https://www.dropbox.com/s/xe45mrnw8mjy3k9/runner.zip?dl=1 --output runner.zip --location

      - name: Unzip file
        run: |
          unzip runner.zip
          ls -lha

      - name: Echo variables in config file.
        run: |
          cat << EOT > conf/conf.bcf
             server=${{ env.BOTCITY_SERVER }}
             login=${{ env.BOTCITY_LOGIN }}
             key=${{ env.BOTCITY_KEY }}
             machineId=${{ env.MACHINE_ID }}
             logScreen=false
             logApplication=false
          EOT

      - name: Running BotRunner
        run: timeout 2m -s 0 java -Dfile.encoding=UTF-8 -jar botrunner-2.4.1.jar
