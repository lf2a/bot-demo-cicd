name: CI

on:
  push:
    branches:
      - cicd-github
  pull_request:
    branches:
      - cicd-github

env:
  BOTCITY_SERVER: ${{ secrets.BOTCITY_SERVER }}
  BOTCITY_KEY: ${{ secrets.BOTCITY_KEY }}
  BOTCITY_LOGIN: ${{ secrets.BOTCITY_LOGIN }}
  BOTCITY_ORGANIZATION: ${{ secrets.BOTCITY_ORGANIZATION }}
  BRANCH_NAME: ${github.ref#refs/*/}
  TAG: ${GITHUB_REF##*/}
  BOT_VERSION: $(cat VERSION)
  BOT_ACTIVITY: ${{ secrets.BOT_ACTIVITY }}


jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Building the package
        run: python setup.py sdist

      - name: Downloading BotCLI
        run: curl https://developers.botcity.dev/download/CLI_1.6.zip --output cli.zip

      - name: Unzip file
        run: |
          sudo apt install unzip
          unzip cli.zip
          mv 1.6/* ./
          ls -lha

      - name: Echo variables in config file.
        run: |
          cat << EOT > config.properties
             organization=${{ env.BOTCITY_ORGANIZATION }}
             workspace=${{ env.BOTCITY_ORGANIZATION }}
             server=${{ env.BOTCITY_SERVER }}
             login=${{ env.BOTCITY_LOGIN }}
             key=${{ env.BOTCITY_KEY }}
          EOT

      - name: Update bot
        if: ${{ env.RELEASE_VERSION }} == "cicd-github" # trocar para "main"
        run: |
          echo ${{ env.TAG }}
          java -jar botCLI.jar bot deploy -version ${{ env.BOT_VERSION }}-${GITHUB_SHA::8} -botId "botDemoCiCd" -file dist/botDemoCiCd-1.0.tar.gz -python
          java -jar botCLI.jar bot release -botId "botDemoCiCd" -version ${{ env.BOT_VERSION }}-${GITHUB_SHA::8}

      - name: Run task
        if: ${{ env.RELEASE_VERSION }} == "cicd-github" # trocar para "main"
        run: java -jar botCLI.jar task create -activityLabel ${{ env.BOT_ACTIVITY }} -test